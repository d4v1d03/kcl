---
source: parser/src/tests/error_recovery.rs
expression: "crate::tests::parsing_expr_string(r#\"a(\n    1,\n    2,\n]\"#)"
---
Node {
    node: Call(
        CallExpr {
            func: Node {
                node: Identifier(
                    Identifier {
                        names: [
                            Node {
                                node: "a",
                                filename: "",
                                line: 1,
                                column: 0,
                                end_line: 1,
                                end_column: 1,
                            },
                        ],
                        pkgpath: "",
                        ctx: Load,
                    },
                ),
                filename: "",
                line: 1,
                column: 0,
                end_line: 1,
                end_column: 1,
            },
            args: [
                Node {
                    node: NumberLit(
                        NumberLit {
                            binary_suffix: None,
                            value: Int(
                                1,
                            ),
                        },
                    ),
                    filename: "",
                    line: 2,
                    column: 4,
                    end_line: 2,
                    end_column: 5,
                },
                Node {
                    node: NumberLit(
                        NumberLit {
                            binary_suffix: None,
                            value: Int(
                                2,
                            ),
                        },
                    ),
                    filename: "",
                    line: 3,
                    column: 4,
                    end_line: 3,
                    end_column: 5,
                },
            ],
            keywords: [],
        },
    ),
    filename: "",
    line: 1,
    column: 0,
    end_line: 4,
    end_column: 1,
}
